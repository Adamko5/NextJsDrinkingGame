/*
  Styles for the ClassPicker component. The picker presents a
  collection of selectable cards representing player classes or
  traits. Cards arrange themselves in a responsive grid. A selected
  card is highlighted with a coloured border and subtle shadow. The
  global theme variables are used for colours to ensure consistency
  across the application.
*/

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(6rem, 1fr));
  gap: 0.75rem;
  width: 100%;
}

.card {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0.75rem;
  border: 1px solid var(--border);
  border-radius: 0.5rem;
  background-color: var(--surface);
  cursor: pointer;
  transition: border-color 0.2s ease, box-shadow 0.2s ease,
    background-color 0.2s ease;
  user-select: none;
  height: 130px;
}

.card:hover {
  background-color: var(--blue-100);
}

.selected {
  border-color: var(--primary);
  box-shadow: 0 0 0 2px var(--focus-ring);
}

.icon {
  font-size: 1.5rem;
  margin-bottom: 0.5rem;
}

.labelClass {
  font-size: 1rem;
  text-align: center;
  color: var(--text);
}

.label {
  font-size: 0.875rem;
  text-align: center;
  color: var(--text);
}

.image {
  width: 3rem;
  height: 3rem;
  object-fit: contain;
  margin-bottom: 0.5rem;
}

/* New styles to support the single-card carousel view. */

/* Wraps the arrows and card horizontally with spacing */
.wrapper {
  display: flex;
  align-items: center;
  justify-content: center;
}

/* Basic styling for the navigation arrows.  We use transparent
   backgrounds so they blend into the card container. */
.arrow {
  background: none;
  border: none;
  font-size: 2rem;
  line-height: 1;
  color: var(--primary);
  cursor: pointer;
  transition: color 0.2s ease;
  padding: 0;
}

.arrow:disabled {
  opacity: 0.3;
  cursor: default;
}